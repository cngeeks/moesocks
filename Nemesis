import Prelude ()
import System.Nemesis.Env hiding (run)
import qualified System.Nemesis.Env as N
import Air.Env
import Control.Monad
import Data.Monoid

main = N.run nemesis

ping = do
        sh "curl -x socks5://localhost:1090 'http://[::1]:8080'; exit 0"

run x = sh - "cabal run -- " <> x

nemesis = do

  desc "halive"
  task "h" - do
    sh "halive src/HaliveMain.hs src"

  namespace "bench" - do
    desc "run"
    task "run" - do
      sh "cabal run -- -m debug -c bench/bench.json -v"
    
    desc "run-r"
    task "run-r" - do
      sh "cabal run -- -m remote -c bench/bench.json -v"
    
    desc "run-l"
    task "run-l" - do
      sh "cabal run -- -m local -c bench/bench.json -v"
    
    desc "run-ss-r"
    task "run-ss-r" - do
      sh "ssserver -c bench/bench.json -v"
    
    desc "run-ss-l"
    task "run-ss-l" - do
      sh "sslocal -c bench/bench.json -v"
    
    desc "run-ss-libev-r"
    task "run-ss-libev-r" - do
      sh "ss-server -c bench/bench.json -v"
    
    desc "run-ss-libev-l"
    task "run-ss-libev-l" - do
      sh "ss-local -c bench/bench.json -v"
   
    desc "http"
    task "http" - do
      sh "cabal run -- -m debug -c bench/bench.json -T 8081:localhost:8080"
    
    let url = "http://localhost:8080/test.mp4"
        cmd = "parallel --no-notice curl -x socks5://localhost:1091 -o /dev/null" 
        args = concatMap (<> " ") - replicate 4 url

    desc "load"
    task "load" - do  
        forever-
          sh - "curl -x socks5://localhost:1091 -o /dev/null"
              <> " "
              <> url
    
    desc "parallel-one"
    task "parallel-one" - do  
      sh - cmd
            <> " ::: "
            <> args

    desc "parallel"
    task "parallel" - do  
      forever - 
        sh - cmd
              <> " ::: "
              <> args


  desc "test port forwarding with a tcp dns request"
  task "dig-tcp" - do
    sh "dig @localhost -p 5300 +tcp twitter.com"

  desc "test port forwarding with a loop of udp dns request"
  task "dig" - do
    forever - do
      sh "dig @localhost -p 5300 twitter.com; exit 0;"
      sleep 1
  
  desc "test port forwarding with a udp dns request"
  task "dig-one" - do
    sh "dig @localhost -p 5300 twitter.com; exit 0;"
    sleep 1
  
  desc "dist"
  task "dist" - do
    sh "cabal clean"
    sh "cabal configure"
    sh "cabal sdist"


  desc "test"
  task "test" - do
    forever - do
      ping
      sleep 3

  desc "ping"
  task "ping" - ping
  
  desc "remote"
  task "remote" - do
    run "-m remote -c dev.json"
  
  desc "local"
  task "local" - do
    run "-m local -c dev.json -U 5300:8.8.8.8:53 -T 5300:8.8.8.8:53"

  desc "remote-debug"
  task "remote-debug" - do
    run "-m remote -c dev.json -v"
  
  desc "local-debug"
  task "local-debug" - do
    run "-m local -c dev.json -v"

  desc "ssserver"
  task "ssserver" - do
    sh "ssserver -c dev.json"
  
  desc "sslocal"
  task "sslocal" - do
    sh "sslocal -c dev.json"

  desc "local2"
  task "local2" - do
    run "-m local -c dev2.json -U 5300:8.8.8.8:53"
  
  desc "i"
  task "i" - do
    sh "cabal repl"

  desc "local-debug-clean"
  task "local-debug-clean" - do
    run - "-m local -c dev-debug.json -v -T "
        <> " 5300:[2001:4860:4860::8888]:53"
  
  desc "remote-debug-clean"
  task "remote-debug-clean" - do
    run "-m remote -c dev-debug.json -v"


  desc "merge debug to master"
  task "m" - do
    sh "git checkout master"
    sh "git merge dev -m \"Merge branch 'debug'\""
    sh "git push origin master"
    sh "git checkout dev"


  desc "project playground"
  task "p" - do
    sh "halive src/Playground.hs src"
